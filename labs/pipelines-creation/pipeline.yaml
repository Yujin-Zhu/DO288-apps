---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: nodejs-build
spec:
  workspaces:
    - name: shared
  params:
    - name: IMAGE_NAME
      type: string
      default: "exchange"
    - name: GIT_REPO
      type: string
      default: "https://github.com/Yujin-Zhu/DO288-apps" 
    - name: GIT_REVISION
      type: string
      default: "main"
    - name: APP_PATH
      type: string
      default: "apps/pipelines-creation/exchange"

  tasks:
    - name: fetch-repository
      taskRef:
        name: git-clone
        kind: ClusterTask
      params:
        - name: url
          value: $(params.GIT_REPO)
        - name: revision
          value: $(params.GIT_REVISION)
        - name: sslVerify
          value: false
      workspaces: 
        - name: output
          workspace: shared
    - name: npm-install
      taskRef:
        name: npm
        kind: Task
      runAfter:
        - fetch-repository
      workspaces:
        - name: source
          workspace: shared
      params:
        - name: CONTEXT
          value: $(params.APP_PATH)
        - name: ARGS
          value: install --no-package-lock
    - name: npm-test
      taskRef:
        name: npm
        kind: Task
      params: 
        - name: CONTEXT
          value: $(params.APP_PATH)
        - name: ARGS
          value: test
      runAfter:
        - npm-install
      workspaces:
        - name: source
          workspace: shared
    - name: npm-lint
      taskRef:
        name: npm
        kind: Task
      params: 
        - name: CONTEXT
          value: $(params.APP_PATH)
        - name: ARGS
          value: run lint
      runAfter:
        - npm-install
      workspaces:
        - name: source
          workspace: shared
    - name: app-version
      taskRef:
        name: npm
        kind: Task
      params: 
        - name: CONTEXT
          value: $(params.APP_PATH)
        - name: ARGS
          value: version | grep exchange | cut -d \' -f2 | tr -d '\n'
      runAfter:
        - fetch-repository
      workspaces:
        - name: source
          workspace: shared
    - name: build-image
      taskRef:
        name: buildah
        kind: ClusterTask
      params:
        - name: IMAGE
          value: "docker.io/yujinzhu/$(params.IMAGE_NAME):$(tasks.app-version.results.output)"
        - name: DOCKERFILE
          value: Containerfile
        - name: CONTEXT
          value: $(params.APP_PATH)
        - name: SKIP_PUSH
          value: true
      runAfter:
        - npm-test
        - npm-lint
        - app-version
      workspaces:
        - name: source
          workspace: shared
